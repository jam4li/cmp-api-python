version: "3.9"

services:
  web:
    container_name: django_api
    build: .
    command: daphne config.asgi:application --bind 0.0.0.0 --port 8000
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    volumes:
      - ./:/cmp_api_python/
      - static_volume:/cmp_api_python/static
      - media_volume:/cmp_api_python/media
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - my_network

  db:
    container_name: django_db
    image: mysql:latest
    command: --max_connections=1000
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql:rw
    networks:
      - my_network

  redis:
    container_name: django_redis
    image: "redis:latest"
    restart: always
    ports:
      - "6379:6379"
    networks:
      - my_network

  celery_worker:
    container_name: django_celery_worker
    build: .
    command: celery -A config worker --loglevel=info
    restart: always
    volumes:
      - ./:/cmp_api_python/
    depends_on:
      - redis
    env_file:
      - ./.env
    networks:
      - my_network

  celery_beat:
    container_name: django_celery_beat
    build: .
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: always
    volumes:
      - ./:/cmp_api_python/
    depends_on:
      - redis
    env_file:
      - ./.env
    networks:
      - my_network

volumes:
  db_data:
  static_volume:
    external: true
  media_volume:
    external: true

networks:
  my_network:
    external: true
